generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  address   String   @unique
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@map("users")
}

model NFT {
  id               String   @id @default(cuid())
  tokenId          BigInt   @unique @map("tokenId")
  name             String
  originalInput    String   @map("originalInput")
  optimizedPrompt  String   @map("optimizedPrompt")
  style            String
  creator          String
  imageUrl         String   @map("imageUrl")
  ipfsImageUrl     String?  @map("ipfsImageUrl")
  ipfsMetadataUrl  String?  @map("ipfsMetadataUrl")
  gatewayImageUrl  String?  @map("gatewayImageUrl")
  rarity           Int
  rarityRevealed   Boolean  @default(false) @map("rarityRevealed")
  vrfRequestId     String?  @map("vrfRequestId")
  mintedAt         DateTime @default(now()) @map("mintedAt")
  createdAt        DateTime @default(now()) @map("createdAt")
  updatedAt        DateTime @updatedAt @map("updatedAt")

  @@map("nfts")
}

model VrfRequest {
  id         String   @id @default(cuid())
  requestId  String   @unique @map("requestId")
  status     String
  randomWord BigInt?  @map("randomWord")
  rarity     Int?
  tokenId    BigInt?  @map("tokenId")
  requester  String
  createdAt  DateTime @default(now()) @map("createdAt")
  updatedAt  DateTime @updatedAt @map("updatedAt")

  @@map("vrf_requests")
}
