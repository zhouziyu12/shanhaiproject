'use client';

import { useState, useEffect } from 'react';
import { useAccount, useReadContract } from 'wagmi';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { 
  Store, 
  Search,
  Filter,
  TrendingUp,
  Clock,
  Users,
  Coins,
  Star,
  BarChart3,
  Eye,
  ShoppingCart,
  Tag,
  DollarSign
} from 'lucide-react';
import { CONTRACTS, MARKETPLACE_ABI, RARITY_CONFIG } from '@/config/web3';
import { Listing, MarketStats } from '@/types/marketplace';
import { formatNumber, formatTime } from '@/lib/utils';
import { cn } from '@/lib/utils';

export default function MarketplacePage() {
  const { address, isConnected } = useAccount();
  const [listings, setListings] = useState<Listing[]>([]);
  const [loading, setLoading] = useState(true);
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedRarity, setSelectedRarity] = useState<number | null>(null);
  const [sortBy, setSortBy] = useState<'price' | 'time' | 'rarity'>('time');

  // 读取市场统计
  const { data: marketStats } = useReadContract({
    address: CONTRACTS.MARKETPLACE,
    abi: MARKETPLACE_ABI,
    functionName: 'getMarketStats',
  });

  // 读取活跃列表
  const { data: activeListings } = useReadContract({
    address: CONTRACTS.MARKETPLACE,
    abi: MARKETPLACE_ABI,
    functionName: 'getActiveListings',
    args: [BigInt(0), BigInt(50)], // offset, limit
  });

  useEffect(() => {
    const loadListings = async () => {
      setLoading(true);
      try {
        // 这里应该从合约读取真实数据，现在使用模拟数据
        const mockListings: Listing[] = [
          {
            tokenId: 1,
            seller: '0x1234567890123456789012345678901234567890',
            price: BigInt('1000000000000000000'), // 1 ETH
            timestamp: Date.now() - 3600000,
            active: true,
            priceInEth: 1.0,
            beast: {
              tokenId: 1,
              name: '天龙',
              prompt: '威武的金色神龙翱翔云海之间',
              rarity: 4,
              imageGatewayUrl: 'https://via.placeholder.com/400x400/7c3aed/ffffff?text=天龙',
              creator: '0x1234567890123456789012345678901234567890',
              timestamp: Date.now() - 86400000,
              rarityRevealed: true,
              hasIPFS: true,
              ipfsImageUrl: '',
              ipfsMetadataUrl: ''
            }
          },
          // 更多模拟数据...
        ];
        setListings(mockListings);
      } catch (error) {
        console.error('加载市场数据失败:', error);
      } finally {
        setLoading(false);
      }
    };

    loadListings();
  }, [activeListings]);

  // 过滤和排序
  const filteredListings = listings
    .filter(listing => {
      if (selectedRarity !== null && listing.beast?.rarity !== selectedRarity) {
        return false;
      }
      if (searchQuery) {
        const query = searchQuery.toLowerCase();
        return (
          listing.beast?.name?.toLowerCase().includes(query) ||
          listing.beast?.prompt.toLowerCase().includes(query) ||
          listing.tokenId.toString().includes(query)
        );
      }
      return true;
    })
    .sort((a, b) => {
      switch (sortBy) {
        case 'price':
          return Number(a.price - b.price);
        case 'time':
          return b.timestamp - a.timestamp;
        case 'rarity':
          return (b.beast?.rarity || 0) - (a.beast?.rarity || 0);
        default:
          return 0;
      }
    });

  const stats: MarketStats = {
    totalListings: marketStats?.[0] ? Number(marketStats[0]) : 0,
    totalSales: marketStats?.[1] ? Number(marketStats[1]) : 0,
    totalVolume: marketStats?.[2] || BigInt(0),
    marketFee: marketStats?.[3] ? Number(marketStats[3]) : 250, // 2.5%
    volumeInEth: marketStats?.[2] ? Number(marketStats[2]) / 1e18 : 0,
  };

  return (
    <div className="container mx-auto px-4 py-8 space-y-8">
      {/* 页面标题 */}
      <div className="text-center space-y-4">
        <h1 className="text-3xl font-bold text-white flex items-center justify-center gap-2">
          <Store className="h-8 w-8" />
          神兽交易市场
        </h1>
        <p className="text-white/70">买卖独特的山海经神兽NFT</p>
      </div>

      {/* 市场统计 */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <Card className="bg-white/5 border-white/10 backdrop-blur-sm">
          <CardContent className="p-6 text-center">
            <div className="space-y-2">
              <Tag className="h-8 w-8 text-blue-400 mx-auto" />
              <div className="text-3xl font-bold text-white">
                {stats.totalListings}
              </div>
              <div className="text-sm text-white/60">在售神兽</div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-white/5 border-white/10 backdrop-blur-sm">
          <CardContent className="p-6 text-center">
            <div className="space-y-2">
              <ShoppingCart className="h-8 w-8 text-green-400 mx-auto" />
              <div className="text-3xl font-bold text-white">
                {stats.totalSales}
              </div>
              <div className="text-sm text-white/60">总销售量</div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-white/5 border-white/10 backdrop-blur-sm">
          <CardContent className="p-6 text-center">
            <div className="space-y-2">
              <DollarSign className="h-8 w-8 text-yellow-400 mx-auto" />
              <div className="text-3xl font-bold text-white">
                {stats.volumeInEth.toFixed(1)}
              </div>
              <div className="text-sm text-white/60">交易量 (ETH)</div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-white/5 border-white/10 backdrop-blur-sm">
          <CardContent className="p-6 text-center">
            <div className="space-y-2">
              <TrendingUp className="h-8 w-8 text-purple-400 mx-auto" />
              <div className="text-3xl font-bold text-white">
                {stats.marketFee / 100}%
              </div>
              <div className="text-sm text-white/60">市场手续费</div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* 筛选和搜索 */}
      <Card className="bg-white/5 border-white/10 backdrop-blur-sm">
        <CardContent className="p-6">
          <div className="flex flex-col lg:flex-row gap-4 items-start lg:items-center justify-between">
            {/* 搜索 */}
            <div className="flex-1 max-w-md">
              <div className="relative">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-white/50" />
                <Input
                  placeholder="搜索神兽名称、描述或ID..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  className="pl-10 bg-white/5 border-white/20 text-white placeholder:text-white/50"
                />
              </div>
            </div>

            <div className="flex items-center gap-4">
              {/* 稀有度过滤 */}
              <div className="flex items-center gap-2">
                <Filter className="h-4 w-4 text-white/60" />
                <select
                  value={selectedRarity ?? ''}
                  onChange={(e) => setSelectedRarity(e.target.value ? Number(e.target.value) : null)}
                  className="bg-white/10 border border-white/20 rounded-md px-3 py-1 text-white text-sm"
                >
                  <option value="">所有稀有度</option>
                  {RARITY_CONFIG.NAMES.map((name, index) => (
                    <option key={index} value={index}>{name}</option>
                  ))}
                </select>
              </div>

              {/* 排序 */}
              <div className="flex items-center gap-2">
                <BarChart3 className="h-4 w-4 text-white/60" />
                <select
                  value={sortBy}
                  onChange={(e) => setSortBy(e.target.value as any)}
                  className="bg-white/10 border border-white/20 rounded-md px-3 py-1 text-white text-sm"
                >
                  <option value="time">最新上架</option>
                  <option value="price">价格排序</option>
                  <option value="rarity">稀有度排序</option>
                </select>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* 神兽列表 */}
      {loading ? (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {[...Array(8)].map((_, i) => (
            <Card key={i} className="bg-white/5 border-white/10 animate-pulse">
              <CardContent className="p-6">
                <div className="aspect-square bg-white/10 rounded-lg mb-4" />
                <div className="space-y-2">
                  <div className="h-4 bg-white/10 rounded w-3/4" />
                  <div className="h-3 bg-white/10 rounded w-1/2" />
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      ) : filteredListings.length === 0 ? (
        <Card className="bg-white/5 border-white/10 backdrop-blur-sm">
          <CardContent className="p-12 text-center">
            <Store className="h-16 w-16 mx-auto mb-4 text-white/40" />
            <h3 className="text-xl font-bold text-white mb-2">
              暂无在售神兽
            </h3>
            <p className="text-white/60 mb-6">
              现在还没有神兽在市场上出售，去创造一只然后上架吧！
            </p>
            <Button asChild>
              <a href="/mint">
                开始创造神兽
              </a>
            </Button>
          </CardContent>
        </Card>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {filteredListings.map((listing) => (
            <MarketplaceCard key={listing.tokenId} listing={listing} />
          ))}
        </div>
      )}

      {/* 结果统计 */}
      {filteredListings.length > 0 && (
        <div className="text-center text-white/60 text-sm">
          显示 {filteredListings.length} 个结果，共 {listings.length} 个在售神兽
        </div>
      )}
    </div>
  );
}

// 市场卡片组件
function MarketplaceCard({ listing }: { listing: Listing }) {
  const { beast } = listing;
  if (!beast) return null;

  const rarityInfo = {
    name: RARITY_CONFIG.NAMES[beast.rarity] || '未知',
    color: RARITY_CONFIG.COLORS[beast.rarity as keyof typeof RARITY_CONFIG.COLORS] || RARITY_CONFIG.COLORS[0],
  };

  return (
    <Card className="group bg-white/5 border-white/10 backdrop-blur-sm hover:bg-white/10 transition-all duration-300 cursor-pointer overflow-hidden hover:scale-105">
      <div className="relative">
        {/* 图片 */}
        <div className="aspect-square relative overflow-hidden bg-gradient-to-br from-purple-500/20 to-pink-500/20">
          <img
            src={beast.imageGatewayUrl}
            alt={beast.name || `Beast ${beast.tokenId}`}
            className="w-full h-full object-cover transition-all duration-500 group-hover:scale-110"
          />
          
          {/* 稀有度标签 */}
          <Badge className={cn("absolute top-2 left-2 text-xs", rarityInfo.color)}>
            <Star className="mr-1 h-3 w-3" />
            {rarityInfo.name}
          </Badge>

          {/* 价格标签 */}
          <div className="absolute top-2 right-2 bg-black/80 backdrop-blur-sm px-2 py-1 rounded text-white text-sm font-medium">
            {listing.priceInEth?.toFixed(2)} ETH
          </div>

          {/* 悬浮操作 */}
          <div className="absolute inset-0 bg-black/0 group-hover:bg-black/40 transition-all duration-300">
            <div className="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
              <div className="flex gap-2">
                <Button size="sm" variant="secondary">
                  <Eye className="h-4 w-4" />
                </Button>
                <Button size="sm" variant="gradient">
                  <ShoppingCart className="h-4 w-4" />
                </Button>
              </div>
            </div>
          </div>
        </div>

        {/* 内容 */}
        <CardContent className="p-4 space-y-3">
          <div>
            <h3 className="font-semibold text-white truncate">
              {beast.name || `神兽 #${beast.tokenId}`}
            </h3>
            <p className="text-sm text-white/70 line-clamp-2 mt-1">
              {beast.prompt}
            </p>
          </div>

          <div className="space-y-2 text-xs text-white/50">
            <div className="flex items-center justify-between">
              <span>卖家</span>
              <span>{formatAddress.short(listing.seller)}</span>
            </div>
            <div className="flex items-center justify-between">
              <span>上架时间</span>
              <span>{formatTime.relative(listing.timestamp)}</span>
            </div>
          </div>

          <Button className="w-full" variant="gradient">
            <ShoppingCart className="mr-2 h-4 w-4" />
            立即购买
          </Button>
        </CardContent>
      </div>
    </Card>
  );
}
